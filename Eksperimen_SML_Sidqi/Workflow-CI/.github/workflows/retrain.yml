name: Retrain Workflow
## yaw
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools pandas scikit-learn mlflow==2.14.3 joblib dagshub

      - name: Verify MLproject file
        run: |
          cd MLProject
          ls -la
          if [ -f "MLProject" ]; then
            echo "MLproject file found!"
            cat MLProject
          else
            echo "MLproject file not found!"
            exit 1
          fi

      - name: Verify dataset file
        run: |
          if [ -f "MLProject/dataset/processed/iris_processed.csv" ]; then
            echo "Dataset file found!"
          else
            echo "Dataset file not found!"
            exit 1
          fi

      - name: Debug directory structure
        run: |
          pwd
          ls -la
          cd MLProject
          pwd
          ls -la
          if [ -f "modelling.py" ]; then
            echo "modelling.py found!"
          else
            echo "modelling.py not found!"
            exit 1
          fi

      - name: Debug environment variables
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/Sidqiamn/Workflow-CI.mlflow
          MLFLOW_TRACKING_USERNAME: Sidqiamn
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          MLFLOW_S3_ENDPOINT_URL: https://dagshub.com/api/v1/repo-buckets/s3/Sidqiamn
          AWS_ACCESS_KEY_ID: ${{ secrets.MLFLOW_TRACKING_PUBLIC_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          echo "MLFLOW_TRACKING_URI: $MLFLOW_TRACKING_URI"
          echo "MLFLOW_TRACKING_USERNAME: $MLFLOW_TRACKING_USERNAME"
          echo "MLFLOW_TRACKING_PASSWORD: $MLFLOW_TRACKING_PASSWORD"
          echo "MLFLOW_S3_ENDPOINT_URL: $MLFLOW_S3_ENDPOINT_URL"
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY"
          echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
          python --version
          mlflow --version
          pip list

      - name: Test MLflow connection
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/Sidqiamn/Workflow-CI.mlflow
          MLFLOW_TRACKING_USERNAME: Sidqiamn
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          python -c "import mlflow; client = mlflow.tracking.MlflowClient(); experiment = client.get_experiment_by_name('Default'); print('Connection successful:', experiment is not None)"

      - name: Run MLflow project for retraining
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/Sidqiamn/Workflow-CI.mlflow
          MLFLOW_TRACKING_USERNAME: Sidqiamn
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          MLFLOW_S3_ENDPOINT_URL: https://dagshub.com/api/v1/repo-buckets/s3/Sidqiamn
          AWS_ACCESS_KEY_ID: ${{ secrets.MLFLOW_TRACKING_PUBLIC_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          cd MLProject
          mlflow run . -e train --env-manager=local

      - name: Commit trained model and artifacts
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add MLProject/models/rf_model_sidqi.joblib MLProject/classification_report.txt
          git commit -m "Update trained model and artifacts" || echo "No changes to commit"
          git push

      - name: Debug Docker Hub credentials
        run: |
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}"
          echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}"
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "Error: Docker Hub credentials are missing!"
            exit 1
          else
            echo "Docker Hub credentials are set."
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Debug Docker Hub login
        run: |
          docker info --format '{{.IndexServerAddress}}'
          docker pull hello-world  # Uji pull (harusnya berhasil jika login valid)
          echo "Attempting to push a test image..."
          docker tag hello-world qiamn/workflow-ci:test
          docker push qiamn/workflow-ci:test || echo "Push failed, check token permissions"

      - name: Debug Dockerfile existence
        run: |
          ls -la MLProject/
          if [ -f "MLProject/Dockerfile" ]; then
            echo "Dockerfile found!"
            cat MLProject/Dockerfile
          else
            echo "Error: Dockerfile not found in MLProject/!"
            exit 1
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: MLProject
          file: MLProject/Dockerfile
          push: true
          tags: qiamn/workflow-ci:latest
